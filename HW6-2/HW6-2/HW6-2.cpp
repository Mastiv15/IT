#include <iostream>
#include <ctime>
#include <vector>

int main()
{
    //команда для генирации слуайных чисел,
    //что бы рандомные числа не повторядись каждый раз при вызове
    std::srand(time(NULL));

    std::cout << " Enter the number of random numbers, up to 10 : ";
    
    //задаём количество
    //элементов массива
    int numbers;
    std::cin >> numbers;
        
    //проверяем количество введёных чисел
    // от пользователя
    if (numbers > 10)
    {
        std::cout << " You entered a large value " << std::endl;
    }

    else
    {
        //хотел присвоить новой переменной random значение rand, не получилось
        // при работе цикла выдаёт одно и тоже значение

        /*int random = rand() % 100 + 1;
        std::cout << random;*/

        std::vector<int> vec;
        std::cout << " Your random numbers is : ";

        //i=0, это i[0] значение массива
        // переменная numbers - количество элементов массива
        //количество элементов масива допустим заданно 10, но т.к. i < 10,
        // то элементы массива будут иметь значения от i[0] до i[9] = 10 элементов. (numbers -1) делать ну жуно
        for (int i = 0; i < numbers; ++i)
        {
            // командой name(имя функции).push_back() добавляем нужное нам значения в массив
            //в данном случае командой случайных цифр rand()%100+1, числа от 1 до 100
               
            vec.push_back(rand()% 100 +1);
            
        }
       
        for (int i = 0; i < numbers; ++i)
        {
            std::cout << vec[i] << "  ";
        }

        //проверяем максимальную ёмкость vector<int> vec на вмещение
        //  элементов с заданным numbers
        std::cout <<std::endl<< " vec.capacity --- " << vec.capacity() << std::endl;
        
       
        //      В ПОРЯДКЕ ВОЗРАСТАНИЯ
                

       /* увеличиваем ёмкость std::vector<int> vec (вектора) массива до 20 элементов,
       т.е. нам нужно сгенерировать ещё 10 элементов "сверху"))
          что бы программа не легла*/
        vec.resize(20);


        std::cout <<std::endl<< " increase vec.capacity to--- " << vec.capacity() << std::endl;

     /*   начинаем проверку элементов массива,
        вншний цикл проверяет многократно числа в строке, после нахождения самого малого числа
        возвращает его на первое месте в массиве. И повторяет заного с вторым элементом массива.
        Выставляя на первое место самый малый по величине массив, строка записывается,
        и дальше создаётся вторая строка с уже выставленным первым элементом, далее проверяется второй элемент массива
        и т.д.
        переменная i хранит в себе строки с изменённым в нём элементом массива в порядке возрастания
     */
        for (int i = 0; i < numbers-1; ++i)
        {
           /* внутренний цикл, проверяет рядом стоящие элементы массива
                между собой находящиеся в одной строке
                переменная j хранит в себе сверяемые элементы массива (числа в строке)*/
            for (int j = 0; j < numbers-1; ++j)
            {
                /*вводим новую переменную temp для хранения данных
                */
                int temp;

                //передача элементов массива между собой (чисел), если они 
               // удовлетворяют условиям сравнения
                if (vec[j] > vec [j + 1])
                {
                    temp = vec[j];
                    vec[j] = vec[j + 1];
                    vec[j + 1] = temp;
                }
            }
           
            
        } 
        for (int i = 0; i < numbers; ++i)
        {
            std::cout << std::endl << vec[i] << "  ";
        }
    }
    
    
}
